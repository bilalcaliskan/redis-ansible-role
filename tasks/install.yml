---

- name: Include version specific variables for CentOS/RHEL
  include_vars: "{{ ansible_os_family | lower }}_{{ ansible_distribution_major_version }}.yml"

- name: Get service facts
  service_facts:

- name: Set fact before installation
  set_fact:
    redis_installed: false
  when: ansible_facts.services["redis.service"] is not defined

- name: Install the required packages
  package:
    name: "{{ os_required_packages }}"
    state: present
    use: auto

- name: Install the specified version of Redis from {{ redis_install_repo }} repo
  yum:
    name: "redis-{{ redis_version }}"
    enablerepo: "{{ redis_install_repo }}"
    state: present
  when: redis_version != "latest"

- name: Install the latest version of Redis from {{ redis_install_repo }} repo
  yum:
    name: redis
    enablerepo: "{{ redis_install_repo }}"
    state: present
  when: redis_version == "latest"

- name: Transfer redis.conf template file to the remote location
  template:
    src: redis.conf.j2
    dest: /etc/redis.conf
    owner: redis
    group: redis
    mode: 0644
    setype: redis_conf_t
  changed_when: false

- name: Ensure redis port is allowed for SELinux
  seport:
    ports: "{{ redis_port }}"
    proto: tcp
    setype: redis_port_t
    state: present
  when:
    - ansible_selinux is defined
    - ansible_selinux | bool

- name: Ensure firewalld is started and enabled
  service:
    name: firewalld
    state: started
    enabled: true
  changed_when: false

- name: Manage firewalld configuration
  firewalld:
    port: "{{ redis_port }}/tcp"
    permanent: true
    immediate: true
    state: enabled

- name: Ensure limits are passed to systemd unit file
  lineinfile:
    path: /etc/systemd/system/redis.service.d/limit.conf
    regexp: "^{{ item.key }}"
    line: "{{ item.key }}={{ item.value }}"
  when:
    - os_required_limits is defined
    - (os_required_limits | length > 0)
  loop: "{{ os_required_limits }}"

- name: Include tasks from sentinel.yml
  include_tasks: sentinel.yml
  when:
    - sentinel_enabled | bool
    - not cluster_enabled | bool

- name: Include tasks from cluster.yml
  include_tasks: cluster.yml
  when:
    - cluster_enabled | bool
    - not sentinel_enabled | bool

- name: Include tasks from tuned.yml
  include_tasks: tuned.yml

- name: Include tasks from tuned.yml
  include_tasks: tuned.yml

- name: Include tasks from swap.yml
  include_tasks: swap.yml

- name: force systemd to reread configs
  systemd:
    daemon_reload: true

- name: start and enable redis service
  service:
    name: redis
    state: started
    enabled: true

- name: Set fact after installation to notify handlers
  set_fact:
    redis_installed: true
  when: ansible_facts.services["redis.service"] is defined

...
